name: Build and Deploy
on:
  pull_request:
    branches:
      - staging

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: savings_test
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Adjust to your Laravel version
          extensions: mbstring, bcmath, pdo, mysql, curl
          tools: composer, phpunit

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader

      # Step 4: Set up Laravel environment
      - name: Set up environment
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=savings_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          echo 'APP_FRONTEND_MARKETER_URL="https://divineglobalgrowth.com"' >> .env
          echo 'APP_FRONTEND_MANAGER_URL="https://divineglobalgrowth.com"' >> .env
          echo 'APP_FRONTEND_ADMIN_URL="https://divineglobalgrowth.com"' >> .env
          php artisan key:generate
          php artisan config:clear
          php artisan cache:clear
          php artisan config:cache

      # Step 5: Configure database for testing
      - name: Configure database
        run: |
          php artisan migrate --seed

      # Step 6: Run tests
      - name: Run tests
        run: |
          php artisan test

      # Step 7: Deploy if tests pass
      - name: Deploy to server
        if: success()
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.W1_HOST }}
          port: ${{ secrets.W1_PORT }}
          username: ${{ secrets.W1_USERNAME }}
          password: ${{ secrets.W1_PASSWORD }}
          script: |
            cd ~/staging-api.divineglobalgrowth.com/savings-backend
            git pull origin staging
            cp .env .env.backup
            cp .env.staging .env
            composer install --optimize-autoloader --no-dev
            php artisan migrate --force
            php artisan key:generate
            php artisan db:seed
            php artisan cache:clear
            php artisan route:cache
            php artisan view:cache
            echo "Deployment successful!"
